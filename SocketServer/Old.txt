/**
           * Windows
           */

           /**
            * Linux
            */
           if (event.data.fd == this->GetHandle()) {

               this->HandleNewConnectionEvent();

           } else {

               if ((event.events & EPOLLHUP) || (event.events & EPOLLERR)) {

                   auto ctx = reinterpret_cast<SocketContext *>(event.data.ptr);

                   this->HandleDisconnectionEvent(ctx);
               }

               if (event.events & EPOLLIN) { // Read Event

                   auto ctx = reinterpret_cast<SocketContext *>(event.data.ptr);

                   try {
                       this->HandleMessageEvent(ctx);
                   } catch (...) {
                       fprintf(stderr, "Error HandleMessageEvent\n");
                   }
               }

               if (event.events & EPOLLOUT) { // Write Event

               }

           }


           /**
            * MacOS
            */
            if (event.flags & (unsigned)EV_EOF) { // disconnection event

                auto ctx = reinterpret_cast<SocketContext *>(event.udata);

                this->HandleDisconnectionEvent(ctx);

            } else if (event.ident == this->GetHandle()) { // new client connection event

                this->HandleNewConnectionEvent();

            } else if (event.filter == EventType::Read) { // new client message

                auto ctx = reinterpret_cast<SocketContext *>(event.udata);

                try {
                    this->HandleMessageEvent(ctx);
                } catch (...) {
                    fprintf(stderr, "Error HandleMessageEvent\n");
                }
            }